UPDATE `hb_reports` set query = 'SELECT  cd.id as `Client ID`, CONCAT(cd.firstname, ' ', cd.lastname) as `Client`, sql_currency(COALESCE(ac.ac_total,0) + COALESCE(ad.ad_total,0) + COALESCE(am.am_total,0),cb.currency_id,0) as `TOTAL`, COALESCE(ac.ac_count_services,0) + COALESCE(ad.ad_count_services,0) + COALESCE(am.am_count_services,0) as `Active Services` FROM hb_client_details cd LEFT JOIN hb_client_billing cb on (cd.id=cb.client_id) LEFT JOIN ( SELECT 1ac.client_id, count(1ac.id) as ac_count_services, SUM(COALESCE(case  when 1ac.billingcycle = "Monthly" then 1ac.`total` when 1ac.billingcycle = "Quarterly" then 1ac.`total` / 3 when 1ac.billingcycle = "Semi-Annually" then 1ac.`total` / 6 when 1ac.billingcycle = "Annually" then 1ac.`total` / 12 when 1ac.billingcycle = "Biennially" then 1ac.`total` / 24 when 1ac.billingcycle = "Triennially" then 1ac.`total` / 36 when 1ac.billingcycle = "Quadrennially" then 1ac.`total` / 48 when 1ac.billingcycle = "Quinquennially" then 1ac.`total` / 60 when 1ac.billingcycle = "Daily" then 1ac.`total` * 30 when 1ac.billingcycle = "Weekly" then 1ac.`total` / 7 * 30 when 1ac.billingcycle = "Hourly" then 1ac.`total` * 24 * 30	 end,0)) as ac_total FROM hb_accounts 1ac LEFT JOIN hb_client_billing 1cb on (1ac.client_id=1cb.client_id) WHERE 1ac.client_id = :client_id AND 1ac.status = ''Active'' AND 1ac.billingcycle NOT IN (''Free'', ''One Time'') GROUP BY 1ac.client_id) ac  ON (ac.client_id = cd.id OR ac.client_id IS NULL) LEFT JOIN ( SELECT 2ac.client_id, count(2ad.id) as ad_count_services, SUM(COALESCE(case  when 2ad.billingcycle = "Monthly" then 2ad.recurring_amount when 2ad.billingcycle = "Quarterly" then 2ad.recurring_amount / 3 when 2ad.billingcycle = "Semi-Annually" then 2ad.recurring_amount / 6 when 2ad.billingcycle = "Annually" then 2ad.recurring_amount / 12 when 2ad.billingcycle = "Biennially" then 2ad.recurring_amount / 24 when 2ad.billingcycle = "Triennially" then 2ad.recurring_amount / 36 when 2ad.billingcycle = "Quadrennially" then 2ad.recurring_amount / 48 when 2ad.billingcycle = "Quinquennially" then 2ad.recurring_amount / 60 when 2ad.billingcycle = "Daily" then 2ad.recurring_amount * 30 when 2ad.billingcycle = "Weekly" then 2ad.recurring_amount / 7 * 30 when 2ad.billingcycle = "Hourly" then 2ad.recurring_amount * 24 * 30	 end,0)) as ad_total FROM hb_accounts_addons 2ad INNER JOIN hb_accounts 2ac on (2ac.id = 2ad.account_id) LEFT JOIN hb_client_billing 2cb on (2ac.client_id=2cb.client_id) WHERE 2ac.client_id = :client_id  AND 2ac.status = ''Active'' AND 2ac.billingcycle NOT IN (''Free'', ''One Time'') GROUP BY 2ac.client_id) ad  ON (ad.client_id = cd.id OR ad.client_id IS NULL) LEFT JOIN ( SELECT 3am.client_id, count(3am.id) as am_count_services, COALESCE(3am.recurring_amount/3am.period/12,0) as am_total FROM hb_domains 3am LEFT JOIN hb_client_billing 3cb on (3am.client_id=3cb.client_id) WHERE 3am.client_id = :client_id  AND 3am.status = ''Active'' GROUP BY 3am.client_id) am  ON (am.client_id = cd.id OR am.client_id IS NULL) WHERE cd.id = :client_id' WHERE  `name` = 'Monthly Turnover by Client';
##########
UPDATE `hb_reports` set query = 'SELECT cd.id as `Client ID`,  CONCAT(cd.firstname, '' '', cd.lastname) as `Client`,  sql_currency(COALESCE(ac.ac_total,0) + COALESCE(ad.ad_total,0) + COALESCE(am.am_total,0),cb.currency_id,0) as `Total value (Client currency)`,  sql_normalize_currency(COALESCE(ac.ac_total,0) + COALESCE(ad.ad_total,0) + COALESCE(am.am_total,0),cb.currency_id,:currency,1) as `Total value (Normalized currency)`,  COALESCE(ac.ac_count_services,0) + COALESCE(ad.ad_count_services,0) + COALESCE(am.am_count_services,0) as `Active Services`  FROM hb_client_details cd  LEFT JOIN hb_client_billing cb on (cd.id=cb.client_id)  LEFT JOIN ( SELECT 1ac.client_id, count(1ac.id) as ac_count_services,  SUM(COALESCE(case   when 1ac.billingcycle = "Monthly" then 1ac.`total`  when 1ac.billingcycle = "Quarterly" then 1ac.`total` / 3  when 1ac.billingcycle = "Semi-Annually" then 1ac.`total` / 6  when 1ac.billingcycle = "Annually" then 1ac.`total` / 12  when 1ac.billingcycle = "Biennially" then 1ac.`total` / 24  when 1ac.billingcycle = "Triennially" then 1ac.`total` / 36  when 1ac.billingcycle = "Quadrennially" then 1ac.`total` / 48  when 1ac.billingcycle = "Quinquennially" then 1ac.`total` / 60  when 1ac.billingcycle = "Daily" then 1ac.`total` * 30  when 1ac.billingcycle = "Weekly" then 1ac.`total` / 7 * 30  when 1ac.billingcycle = "Hourly" then 1ac.`total` * 24 * 30	  end,0)) as ac_total  FROM hb_accounts 1ac  LEFT JOIN hb_client_billing 1cb on (1ac.client_id=1cb.client_id)  WHERE 1ac.status = ''Active'' AND 1ac.billingcycle NOT IN (''Free'', ''One Time'')  GROUP BY 1ac.client_id) ac  ON (ac.client_id = cd.id OR ac.client_id IS NULL)  LEFT JOIN ( SELECT 2ac.client_id, count(2ad.id) as ad_count_services,  SUM(COALESCE(case   when 2ad.billingcycle = "Monthly" then 2ad.recurring_amount  when 2ad.billingcycle = "Quarterly" then 2ad.recurring_amount / 3  when 2ad.billingcycle = "Semi-Annually" then 2ad.recurring_amount / 6  when 2ad.billingcycle = "Annually" then 2ad.recurring_amount / 12  when 2ad.billingcycle = "Biennially" then 2ad.recurring_amount / 24  when 2ad.billingcycle = "Triennially" then 2ad.recurring_amount / 36  when 2ad.billingcycle = "Quadrennially" then 2ad.recurring_amount / 48  when 2ad.billingcycle = "Quinquennially" then 2ad.recurring_amount / 60  when 2ad.billingcycle = "Daily" then 2ad.recurring_amount * 30  when 2ad.billingcycle = "Weekly" then 2ad.recurring_amount / 7 * 30  when 2ad.billingcycle = "Hourly" then 2ad.recurring_amount * 24 * 30	  end,0)) as ad_total  FROM hb_accounts_addons 2ad INNER JOIN hb_accounts 2ac on (2ac.id = 2ad.account_id)  LEFT JOIN hb_client_billing 2cb on (2ac.client_id=2cb.client_id)  WHERE 2ac.status = ''Active'' AND 2ac.billingcycle NOT IN (''Free'', ''One Time'')  GROUP BY 2ac.client_id) ad  ON (ad.client_id = cd.id OR ad.client_id IS NULL)  LEFT JOIN ( SELECT 3am.client_id, count(3am.id) as am_count_services,  COALESCE(3am.recurring_amount/3am.period/12,0) as am_total  FROM hb_domains 3am  LEFT JOIN hb_client_billing 3cb on (3am.client_id=3cb.client_id)  WHERE 3am.status = ''Active''  GROUP BY 3am.client_id) am  ON (am.client_id = cd.id OR am.client_id IS NULL)  ORDER BY cast(sql_normalize_currency(COALESCE(ac.ac_total,0) + COALESCE(ad.ad_total,0) + COALESCE(am.am_total,0),cb.currency_id,:currency,0) as decimal) DESC,  `Active Services` DESC LIMIT :limit' WHERE `name` = 'Monthly Turnover for all clients, normalized  by currency';
